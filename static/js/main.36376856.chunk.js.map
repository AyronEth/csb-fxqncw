{"version":3,"sources":["ErrorMessage.js","store.js","SuccessMessage.js","SignMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","usersDb","collection","updatePendingTicket","ticketUuid","signedEntry","a","getPendingTicket","updateDoc","doc","getDoc","docVal","exists","data","userName","onUserNameChangedListener","query","where","findUserQuery","onSnapshot","snapshot","docs","map","wallet","SuccessMessage","signMessage","setSuccess","setError","console","log","window","ethereum","Error","send","provider","ethers","providers","Web3Provider","signer","getSigner","getAddress","address","signature","SignMessage","useState","signatures","setSignatures","error","success","associatedWallet","setAssociatedWallet","setTicketUuid","discordId","setDiscordId","useSearchParams","searchParams","handleSign","e","preventDefault","sig","useEffect","get","fetchDiscordId","pendingTicket","listenForAddressChange","newWallet","onSubmit","disabled","type","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.36376856.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getFirestore,\r\n  updateDoc,\r\n  query,\r\n  doc,\r\n  where,\r\n  collection,\r\n  getDocs,\r\n  onSnapshot,\r\n  getDoc\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDEE55Nf4CiqH0sAnozGEnIsWShSsmKaUg\",\r\n  authDomain: \"discord-wallet-auth.firebaseapp.com\",\r\n  projectId: \"discord-wallet-auth\",\r\n  storageBucket: \"discord-wallet-auth.appspot.com\",\r\n  messagingSenderId: \"21899065217\",\r\n  appId: \"1:21899065217:web:108b941a3ff3001aed5a80\",\r\n  measurementId: \"G-B1NXSG2T8R\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst PENDING_ENTRIES_COLLECTION = \"PendingEntry\";\r\nconst DISCORD_USER = \"DiscordUser\";\r\nconst usersDb = collection(db, DISCORD_USER);\r\n\r\nexport async function updatePendingTicket(ticketUuid, signedEntry) {\r\n  var pendingTicket = await getPendingTicket(ticketUuid);\r\n  if (!pendingTicket) return false;\r\n  await updateDoc(doc(collection(db, \"PendingEntry\"), ticketUuid), signedEntry);\r\n  return true;\r\n}\r\n\r\nexport async function getPendingTicket(ticketUuid) {\r\n  if (!ticketUuid) return null;\r\n  var docVal = await getDoc(doc(collection(db, \"PendingEntry\"), ticketUuid));\r\n  return docVal.exists() ? docVal.data() : null;\r\n}\r\n\r\nexport async function listenForAddressChange(\r\n  userName,\r\n  onUserNameChangedListener\r\n) {\r\n  if (userName == null) return null;\r\n  var findUserQuery = await query(usersDb, where(\"discordId\", \"==\", userName));\r\n  onSnapshot(findUserQuery, (snapshot) => {\r\n    snapshot.docs.map((doc) => {\r\n      onUserNameChangedListener(doc.data().wallet);\r\n    });\r\n  });\r\n}\r\n","export default function SuccessMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-success\">\n      <div className=\"flex-1\">\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport {\n  updatePendingTicket,\n  listenForAddressChange,\n  getPendingTicket\n} from \"./store.js\";\nimport SuccessMessage from \"./SuccessMessage\";\n\nconst SIGN_MESSAGE = `\nClick to sign in and verify your wallet with the 888 inner circle discord. \n\nThis request will not trigger a blockchain transaction or cost any gas fees.\n`;\n\nconst signMessage = async (setSuccess, setError, ticketUuid, message) => {\n  try {\n    console.log({ message });\n    if (!window.ethereum)\n      throw new Error(\"No crypto wallet found. Please install it.\");\n\n    await window.ethereum.send(\"eth_requestAccounts\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const address = await signer.getAddress();\n    message += `\\n Signing wallet:  ${address}`;\n    message += `\\n Ticket:  ${ticketUuid}`;\n    const signature = await signer.signMessage(message);\n\n    var signedEntry = {\n      message: message,\n      signature: signature,\n      address: address\n    };\n    if (await updatePendingTicket(ticketUuid, signedEntry)) {\n      setSuccess(\"Wallet verified sucessfully.\");\n    } else {\n      setError(\"Ticket has already been used. Please generate another link.\");\n    }\n\n    return signedEntry;\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function SignMessage() {\n  const [signatures, setSignatures] = useState([]);\n  const [error, setError] = useState();\n  const [success, setSuccess] = useState();\n  const [associatedWallet, setAssociatedWallet] = useState(\"None\");\n  const [ticketUuid, setTicketUuid] = useState(\"\");\n  const [discordId, setDiscordId] = useState();\n  const [searchParams] = useSearchParams();\n\n  const handleSign = async (e) => {\n    e.preventDefault();\n    setError();\n    const sig = await signMessage(\n      setSuccess,\n      setError,\n      ticketUuid,\n      SIGN_MESSAGE\n    );\n    if (sig) {\n      setSignatures([...signatures, sig]);\n    }\n  };\n\n  useEffect(() => {\n    setTicketUuid(searchParams.get(\"uuid\"));\n    console.log(ticketUuid);\n    if (ticketUuid == null) {\n      setError(\"Invalid Url. Please generate another link.\");\n      return;\n    }\n\n    const fetchDiscordId = async () => {\n      if (!ticketUuid) {\n        return;\n      }\n      var pendingTicket = await getPendingTicket(ticketUuid);\n      if (pendingTicket) {\n        setDiscordId(pendingTicket.discordId);\n      } else {\n        setError(\"Ticket not found. Please generate another link.\");\n      }\n    };\n    fetchDiscordId();\n\n    listenForAddressChange(discordId, (newWallet) => {\n      setAssociatedWallet(newWallet);\n    });\n  }, [ticketUuid, searchParams, discordId]);\n\n  return (\n    <form className=\"m-4\" onSubmit={handleSign}>\n      <div className=\"credit-card w-full shadow-lg mx-auto rounded-xl bg-white\">\n        <main className=\"mt-4 p-4\">\n          <h1 className=\"text-xl font-semibold text-gray-700\">\n            Discord Id: {discordId}\n          </h1>\n          <h1 className=\"text-xl font-semibold text-gray-700\">\n            Associated wallet: {associatedWallet}\n          </h1>\n        </main>\n        <footer className=\"p-4\">\n          <button\n            disabled={!discordId}\n            type=\"submit\"\n            className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Associate Wallet\n          </button>\n        </footer>\n      </div>\n      <ErrorMessage message={error} />\n      <SuccessMessage message={success} />\n    </form>\n  );\n}\n","import SignMessage from \"./SignMessage\";\n\nexport default function App() {\n  return (\n    <div className=\"flex h-screen justify-center items-center\">\n      <div className=\"w-full lg:w-1/2\">\n        <SignMessage />\n      </div>\n    </div>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}