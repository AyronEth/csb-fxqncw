{"version":3,"sources":["ErrorMessage.js","store.js","SignMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","d","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","PENDING_ENTRIES_COLLECTION","addPendingEntry","userName","signedEntry","a","setDoc","doc","getAssignedAddressForUser","getDoc","userEntry","exists","data","address","signMessage","setError","userid","console","log","window","ethereum","Error","send","provider","ethers","providers","Web3Provider","signer","getSigner","signature","getAddress","SignMessage","useState","signatures","setSignatures","error","associatedWallet","setAssociatedWallet","discordId","setDiscordId","useSearchParams","searchParams","handleSign","e","preventDefault","userId","sig","useEffect","has","get","assignedWallet","onSubmit","type","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.225274a6.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, setDoc, getDoc, doc } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDEE55Nf4CiqH0sAnozGEnIsWShSsmKaUg\",\r\n  authDomain: \"discord-wallet-auth.firebaseapp.com\",\r\n  projectId: \"discord-wallet-auth\",\r\n  storageBucket: \"discord-wallet-auth.appspot.com\",\r\n  messagingSenderId: \"21899065217\",\r\n  appId: \"1:21899065217:web:108b941a3ff3001aed5a80\",\r\n  measurementId: \"G-B1NXSG2T8R\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst PENDING_ENTRIES_COLLECTION = \"Pending_Entries\";\r\n\r\nexport async function addPendingEntry(userName, signedEntry) {\r\n  return await setDoc(\r\n    doc(db, PENDING_ENTRIES_COLLECTION, userName),\r\n    signedEntry\r\n  );\r\n}\r\n\r\nexport async function getAssignedAddressForUser(userName) {\r\n  var userEntry = await getDoc(doc(db, PENDING_ENTRIES_COLLECTION, userName));\r\n  if (userEntry.exists()) {\r\n    return userEntry.data().address;\r\n  }\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { addPendingEntry, getAssignedAddressForUser } from \"./store.js\";\n\nconst SIGN_MESSAGE = \"Associate wallet to discord\";\n\nconst signMessage = async ({ setError, userid, message }) => {\n  try {\n    console.log({ message });\n    if (!window.ethereum)\n      throw new Error(\"No crypto wallet found. Please install it.\");\n\n    await window.ethereum.send(\"eth_requestAccounts\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const signature = await signer.signMessage(message);\n    const address = await signer.getAddress();\n    var signedEntry = {\n      message: message,\n      signature: signature,\n      address: address\n    };\n    await addPendingEntry(userid, signedEntry);\n    return signedEntry;\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function SignMessage() {\n  const [signatures, setSignatures] = useState([]);\n  const [error, setError] = useState();\n  const [associatedWallet, setAssociatedWallet] = useState();\n  const [discordId, setDiscordId] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSign = async (e) => {\n    e.preventDefault();\n    setError();\n    const sig = await signMessage({\n      setError,\n      userId: discordId,\n      message: SIGN_MESSAGE\n    });\n    if (sig) {\n      setSignatures([...signatures, sig]);\n    }\n  };\n\n  useEffect(async () => {\n    if (searchParams.has(\"discord_id\")) {\n      setDiscordId(searchParams.get(\"discord_id\"));\n    } else {\n      setError(\"Invalid url path.\");\n    }\n    var assignedWallet = await getAssignedAddressForUser(discordId);\n    if (assignedWallet) {\n      setAssociatedWallet(assignedWallet);\n    }\n  });\n\n  return (\n    <form className=\"m-4\" onSubmit={handleSign}>\n      if(this.discordId != null)\n      {\n        <div className=\"credit-card w-full shadow-lg mx-auto rounded-xl bg-white\">\n          <main className=\"mt-4 p-4\">\n            <h1 className=\"text-xl font-semibold text-gray-700\">\n              Discord Id: {discordId}\n            </h1>\n            <h1 className=\"text-xl font-semibold text-gray-700\">\n              Associated wallet: {associatedWallet}\n            </h1>\n          </main>\n          <footer className=\"p-4\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n            >\n              Associate Wallet\n            </button>\n          </footer>\n        </div>\n      }\n      <ErrorMessage message={error} />\n    </form>\n  );\n}\n","import SignMessage from \"./SignMessage\";\n\nexport default function App() {\n  return (\n    <div className=\"flex h-screen justify-center items-center\">\n      <div className=\"w-full lg:w-1/2\">\n        <SignMessage />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}